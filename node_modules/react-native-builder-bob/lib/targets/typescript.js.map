{"version":3,"file":"typescript.js","names":["_del","_interopRequireDefault","require","_fsExtra","_json","_kleur","_os","_path","_which","_spawn","e","__esModule","default","build","source","root","output","report","options","variants","esm","info","kleur","blue","path","relative","del","project","tsconfig","join","fs","pathExists","config","JSON5","parse","readFile","compilerOptions","conflicts","declarationDir","push","outDir","length","warn","reduce","acc","curr","gray","yellow","Error","tsc","resolve","execpath","process","env","npm_execpath","cli","split","pop","includes","result","spawn","cwd","trim","platform","endsWith","which","outputs","commonjs","module","tsbuildinfo","replace","copy","writeJSON","type","success","pkg","JSON","fields","name","value","types","error","message","undefined","exports","Boolean","import","getGeneratedTypesPath","field","indexDTsName","basename","potentialPaths","dirname","potentialPath","invalidFieldNames","Promise","all","map","String","startsWith","test","generatedTypesPath","filter","validFields","every","suggestedTypesPaths","i","self","indexOf","stdout","toString","cause"],"sources":["../../src/targets/typescript.ts"],"sourcesContent":["import del from 'del';\nimport fs from 'fs-extra';\nimport JSON5 from 'json5';\nimport kleur from 'kleur';\nimport { platform } from 'os';\nimport path from 'path';\nimport which from 'which';\nimport type { Input, Variants } from '../types';\nimport { spawn } from '../utils/spawn';\n\ntype Options = Input & {\n  options?: {\n    project?: string;\n    tsc?: string;\n  };\n  esm: boolean;\n  variants: Variants;\n};\n\ntype Field = {\n  name: string;\n  value: string | undefined;\n  output: string | undefined;\n  error: boolean;\n  message: string | undefined;\n};\n\nexport default async function build({\n  source,\n  root,\n  output,\n  report,\n  options,\n  variants,\n  esm,\n}: Options) {\n  report.info(\n    `Cleaning up previous build at ${kleur.blue(path.relative(root, output))}`\n  );\n\n  await del([output]);\n\n  report.info(`Generating type definitions with ${kleur.blue('tsc')}`);\n\n  const project = options?.project ? options.project : 'tsconfig.json';\n  const tsconfig = path.join(root, project);\n\n  try {\n    if (await fs.pathExists(tsconfig)) {\n      try {\n        const config = JSON5.parse(await fs.readFile(tsconfig, 'utf-8'));\n\n        if (config.compilerOptions) {\n          const conflicts: string[] = [];\n\n          if (config.compilerOptions.declarationDir) {\n            conflicts.push('compilerOptions.declarationDir');\n          }\n\n          if (\n            config.compilerOptions.outDir &&\n            path.join(root, config.compilerOptions.outDir) !== output\n          ) {\n            conflicts.push('compilerOptions.outDir');\n          }\n\n          if (conflicts.length) {\n            report.warn(\n              `Found following options in the config file which can conflict with the CLI options. Please remove them from ${kleur.blue(\n                project\n              )}:${conflicts.reduce(\n                (acc, curr) =>\n                  acc + `\\n${kleur.gray('-')} ${kleur.yellow(curr)}`,\n                ''\n              )}`\n            );\n          }\n        }\n      } catch (e) {\n        report.warn(\n          `Couldn't parse ${kleur.blue(\n            project\n          )}. There might be validation errors.`\n        );\n      }\n    } else {\n      throw new Error(\n        `Couldn't find a ${kleur.blue(project)} in the project root.`\n      );\n    }\n\n    let tsc;\n\n    if (options?.tsc) {\n      tsc = path.resolve(root, options.tsc);\n\n      if (!(await fs.pathExists(tsc))) {\n        throw new Error(\n          `The ${kleur.blue(\n            'tsc'\n          )} binary doesn't seem to be installed at ${kleur.blue(\n            tsc\n          )}. Please specify the correct path in options or remove it to use the workspace's version.`\n        );\n      }\n    } else {\n      const execpath = process.env.npm_execpath;\n      const cli = execpath?.split('/').pop()?.includes('yarn') ? 'yarn' : 'npm';\n\n      if (cli === 'yarn') {\n        const result = await spawn('yarn', ['bin', 'tsc'], {\n          cwd: root,\n        });\n\n        tsc = result.trim();\n      } else {\n        tsc = path.resolve(root, 'node_modules', '.bin', 'tsc');\n      }\n\n      if (platform() === 'win32' && !tsc.endsWith('.cmd')) {\n        tsc += '.cmd';\n      }\n    }\n\n    if (!(await fs.pathExists(tsc))) {\n      try {\n        tsc = await which('tsc');\n\n        if (await fs.pathExists(tsc)) {\n          report.warn(\n            `Failed to locate ${kleur.blue(\n              'tsc'\n            )} in the workspace. Falling back to the binary found in ${kleur.blue(\n              'PATH'\n            )} at ${kleur.blue(tsc)}. Consider adding ${kleur.blue(\n              'typescript'\n            )} to your ${kleur.blue(\n              'devDependencies'\n            )} or specifying the ${kleur.blue(\n              'tsc'\n            )} option for the typescript target.`\n          );\n        }\n      } catch (e) {\n        // Ignore\n      }\n    }\n\n    if (tsc == null || !(await fs.pathExists(tsc))) {\n      throw new Error(\n        `The ${kleur.blue(\n          'tsc'\n        )} binary doesn't seem to be installed under ${kleur.blue(\n          'node_modules'\n        )} or present in $PATH. Make sure you have added ${kleur.blue(\n          'typescript'\n        )} to your ${kleur.blue('devDependencies')} or specify the ${kleur.blue(\n          'tsc'\n        )} option for typescript.`\n      );\n    }\n\n    const outputs: { commonjs?: string; module?: string } = {};\n\n    if (esm && variants.commonjs && variants.module) {\n      outputs.commonjs = path.join(output, 'commonjs');\n      outputs.module = path.join(output, 'module');\n    } else if (variants.commonjs) {\n      outputs.commonjs = output;\n    } else {\n      outputs.module = output;\n    }\n\n    const outDir = outputs.commonjs ?? outputs.module;\n\n    if (outDir == null) {\n      throw new Error('Neither commonjs nor module output is enabled.');\n    }\n\n    const tsbuildinfo = path.join(\n      outDir,\n      project.replace(/\\.json$/, '.tsbuildinfo')\n    );\n\n    try {\n      await del([tsbuildinfo]);\n    } catch (e) {\n      // Ignore\n    }\n\n    await spawn(\n      tsc,\n      [\n        '--pretty',\n        '--declaration',\n        '--declarationMap',\n        '--noEmit',\n        'false',\n        '--emitDeclarationOnly',\n        '--project',\n        project,\n        '--outDir',\n        outDir,\n      ],\n      { cwd: root }\n    );\n\n    await del([tsbuildinfo]);\n\n    if (esm) {\n      if (outputs?.commonjs && outputs?.module) {\n        // When ESM compatible output is enabled and commonjs build is present, we need to generate 2 builds for commonjs and esm\n        // In this case we copy the already generated types, and add `package.json` with `type` field\n        await fs.copy(outputs.commonjs, outputs.module);\n        await fs.writeJSON(path.join(outputs.commonjs, 'package.json'), {\n          type: 'commonjs',\n        });\n        await fs.writeJSON(path.join(outputs.module, 'package.json'), {\n          type: 'module',\n        });\n      } else if (outputs?.commonjs) {\n        await fs.writeJSON(path.join(outputs.commonjs, 'package.json'), {\n          type: 'commonjs',\n        });\n      } else if (outputs?.module) {\n        await fs.writeJSON(path.join(outputs.module, 'package.json'), {\n          type: 'module',\n        });\n      }\n    }\n\n    report.success(\n      `Wrote definition files to ${kleur.blue(path.relative(root, output))}`\n    );\n\n    const pkg = JSON.parse(\n      await fs.readFile(path.join(root, 'package.json'), 'utf-8')\n    );\n\n    const fields: Field[] = [\n      {\n        name: 'types',\n        value: pkg.types,\n        output: outputs.commonjs,\n        error: false,\n        message: undefined,\n      },\n      ...(pkg.exports?.['.']?.types\n        ? [\n            {\n              name: \"exports['.'].types\",\n              value: pkg.exports?.['.']?.types,\n              output: outDir,\n              error: Boolean(\n                pkg.exports?.['.']?.import && pkg.exports?.['.']?.require\n              ),\n              message: `using  ${kleur.blue(\n                \"exports['.'].import\"\n              )} and ${kleur.blue(\n                \"exports['.'].require\"\n              )}. Specify ${kleur.blue(\n                \"exports['.'].import.types\"\n              )} and ${kleur.blue(\"exports['.'].require.types\")} instead.`,\n            },\n          ]\n        : []),\n      {\n        name: \"exports['.'].import.types\",\n        value: pkg.exports?.['.']?.import?.types,\n        output: outputs.module,\n        error: !esm,\n        message: `the ${kleur.blue(\n          'esm'\n        )} option is not enabled for the ${kleur.blue('module')} target`,\n      },\n      {\n        name: \"exports['.'].require.types\",\n        value: pkg.exports?.['.']?.require?.types,\n        output: outputs.commonjs,\n        error: false,\n        message: undefined,\n      },\n    ];\n\n    const getGeneratedTypesPath = async (field: Field) => {\n      if (!field.output || field.error) {\n        return null;\n      }\n\n      if (pkg.source) {\n        const indexDTsName =\n          path.basename(pkg.source).replace(/\\.(jsx?|tsx?)$/, '') + '.d.ts';\n\n        const potentialPaths = [\n          path.join(field.output, path.dirname(pkg.source), indexDTsName),\n          path.join(\n            field.output,\n            path.relative(source, path.join(root, path.dirname(pkg.source))),\n            indexDTsName\n          ),\n        ];\n\n        for (const potentialPath of potentialPaths) {\n          if (await fs.pathExists(potentialPath)) {\n            return path.relative(root, potentialPath);\n          }\n        }\n      }\n\n      return null;\n    };\n\n    const invalidFieldNames = (\n      await Promise.all(\n        fields.map(async (field) => {\n          if (field.error) {\n            if (field.value) {\n              report.warn(\n                `The ${kleur.blue(field.name)} field in ${kleur.blue(\n                  `package.json`\n                )} should not be set when ${String(field.message)}.`\n              );\n            }\n\n            return null;\n          }\n\n          if (\n            field.name.startsWith('exports') &&\n            field.value &&\n            !/^\\.\\//.test(field.value)\n          ) {\n            report.error(\n              `The ${kleur.blue(field.name)} field in ${kleur.blue(\n                `package.json`\n              )} should be a relative path starting with ${kleur.blue(\n                './'\n              )}. Found: ${kleur.blue(field.value)}`\n            );\n\n            return field.name;\n          }\n\n          if (\n            field.value &&\n            !(await fs.pathExists(path.join(root, field.value)))\n          ) {\n            const generatedTypesPath = await getGeneratedTypesPath(field);\n\n            report.error(\n              `The ${kleur.blue(field.name)} field in ${kleur.blue(\n                'package.json'\n              )} points to a non-existent file: ${kleur.blue(\n                field.value\n              )}.\\nVerify the path points to the correct file under ${kleur.blue(\n                path.relative(root, output)\n              )}${\n                generatedTypesPath\n                  ? ` (found ${kleur.blue(generatedTypesPath)}).`\n                  : '.'\n              }`\n            );\n\n            return field.name;\n          }\n\n          return null;\n        })\n      )\n    ).filter((name): name is string => name != null);\n\n    if (invalidFieldNames.length) {\n      throw new Error(\n        `Found errors for fields: ${invalidFieldNames.join(', ')}.`\n      );\n    }\n\n    const validFields = fields.filter((field) => !field.error);\n\n    if (validFields.every((field) => field.value == null)) {\n      const suggestedTypesPaths = (\n        await Promise.all(\n          validFields.map(async (field) => getGeneratedTypesPath(field))\n        )\n      )\n        .filter((path): path is string => path != null)\n        .filter((path, i, self) => self.indexOf(path) === i);\n\n      report.warn(\n        `No ${validFields\n          .map((field) => kleur.blue(field.name))\n          .join(' or ')} field found in ${kleur.blue(\n          'package.json'\n        )}. Consider ${\n          suggestedTypesPaths.length\n            ? `pointing to ${suggestedTypesPaths\n                .map((path) => kleur.blue(path))\n                .join(' or ')}`\n            : `adding ${validFields.length > 1 ? 'them' : 'it'}`\n        } so that consumers of your package can use the typescript definitions.`\n      );\n    }\n  } catch (e: unknown) {\n    if (e != null && typeof e === 'object') {\n      if ('stdout' in e && e.stdout != null) {\n        report.error(\n          `Errors found when building definition files:\\n${e.stdout.toString()}`\n        );\n      } else if ('message' in e && typeof e.message === 'string') {\n        report.error(e.message);\n      }\n    }\n\n    throw new Error('Failed to build definition files.', { cause: e });\n  }\n}\n"],"mappings":"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","ignoreList":[]}