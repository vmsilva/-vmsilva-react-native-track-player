{"version":3,"file":"removeCodegenAppLevelCode.test.js","names":["_vitest","require","_fsExtra","_interopRequireDefault","_nodePath","_removeCodegenAppLevelCode","_mockFs","e","__esModule","default","mockPackageJson","codegenConfig","outputDir","android","ios","mockProjectPath","path","resolve","__dirname","describe","beforeEach","mockfs","JSON","stringify","generated","afterEach","restore","test","removeCodegenAppLevelCode","expect","fs","promises","readdir","join","length","toBe","someRandomFile","resolves","not","toThrow"],"sources":["../../../../src/targets/codegen/patches/removeCodegenAppLevelCode.test.ts"],"sourcesContent":["import { expect, describe, beforeEach, afterEach, test } from 'vitest';\nimport fs from 'fs-extra';\nimport path from 'node:path';\nimport { removeCodegenAppLevelCode } from './removeCodegenAppLevelCode';\nimport mockfs from 'mock-fs';\n\nconst mockPackageJson = {\n  codegenConfig: {\n    outputDir: {\n      android: 'android/generated',\n      ios: 'ios/generated',\n    },\n  },\n};\n\nconst mockProjectPath = path.resolve(__dirname, 'mockProject');\n\ndescribe('patchCodegenAndroidPackage', () => {\n  beforeEach(() => {\n    mockfs({\n      [mockProjectPath]: {\n        'package.json': JSON.stringify(mockPackageJson),\n        'ios': {\n          generated: {\n            'RCTAppDependencyProvider.h': '',\n            'RCTAppDependencyProvider.mm': '',\n            'RCTModulesConformingToProtocolsProvider.h': '',\n            'RCTModulesConformingToProtocolsProvider.mm': '',\n            'RCTThirdPartyComponentsProvider.h': '',\n            'RCTThirdPartyComponentsProvider.mm': '',\n            'ReactAppDependencyProvider.podspec': '',\n          },\n        },\n        'android': {\n          generated: {\n            'RCTAppDependencyProvider.h': '',\n            'RCTAppDependencyProvider.mm': '',\n            'RCTModulesConformingToProtocolsProvider.h': '',\n            'RCTModulesConformingToProtocolsProvider.mm': '',\n            'RCTThirdPartyComponentsProvider.h': '',\n            'RCTThirdPartyComponentsProvider.mm': '',\n            'ReactAppDependencyProvider.podspec': '',\n          },\n        },\n      },\n    });\n  });\n\n  afterEach(() => {\n    mockfs.restore();\n  });\n\n  test('removes the duplicate iOS files', async () => {\n    await removeCodegenAppLevelCode(mockProjectPath, mockPackageJson);\n\n    expect(\n      (\n        await fs.promises.readdir(\n          path.join(mockProjectPath, 'ios', 'generated')\n        )\n      ).length\n    ).toBe(0);\n  });\n\n  test('removes the unnecessary Android files', async () => {\n    await removeCodegenAppLevelCode(mockProjectPath, mockPackageJson);\n\n    expect(\n      (\n        await fs.promises.readdir(\n          path.join(mockProjectPath, 'android', 'generated')\n        )\n      ).length\n    ).toBe(0);\n  });\n\n  test(\"doesn't crash the process when there are no files to remove\", async () => {\n    mockfs({\n      [mockProjectPath]: {\n        'package.json': JSON.stringify(mockPackageJson),\n        'ios': {\n          generated: {\n            someRandomFile: '',\n          },\n        },\n        'android': {\n          generated: {\n            someRandomFile: '',\n          },\n        },\n      },\n    });\n\n    await expect(\n      removeCodegenAppLevelCode(mockProjectPath, mockPackageJson)\n    ).resolves.not.toThrow();\n  });\n});\n"],"mappings":";;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,0BAAA,GAAAJ,OAAA;AACA,IAAAK,OAAA,GAAAH,sBAAA,CAAAF,OAAA;AAA6B,SAAAE,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE7B,MAAMG,eAAe,GAAG;EACtBC,aAAa,EAAE;IACbC,SAAS,EAAE;MACTC,OAAO,EAAE,mBAAmB;MAC5BC,GAAG,EAAE;IACP;EACF;AACF,CAAC;AAED,MAAMC,eAAe,GAAGC,iBAAI,CAACC,OAAO,CAACC,SAAS,EAAE,aAAa,CAAC;AAE9D,IAAAC,gBAAQ,EAAC,4BAA4B,EAAE,MAAM;EAC3C,IAAAC,kBAAU,EAAC,MAAM;IACf,IAAAC,eAAM,EAAC;MACL,CAACN,eAAe,GAAG;QACjB,cAAc,EAAEO,IAAI,CAACC,SAAS,CAACb,eAAe,CAAC;QAC/C,KAAK,EAAE;UACLc,SAAS,EAAE;YACT,4BAA4B,EAAE,EAAE;YAChC,6BAA6B,EAAE,EAAE;YACjC,2CAA2C,EAAE,EAAE;YAC/C,4CAA4C,EAAE,EAAE;YAChD,mCAAmC,EAAE,EAAE;YACvC,oCAAoC,EAAE,EAAE;YACxC,oCAAoC,EAAE;UACxC;QACF,CAAC;QACD,SAAS,EAAE;UACTA,SAAS,EAAE;YACT,4BAA4B,EAAE,EAAE;YAChC,6BAA6B,EAAE,EAAE;YACjC,2CAA2C,EAAE,EAAE;YAC/C,4CAA4C,EAAE,EAAE;YAChD,mCAAmC,EAAE,EAAE;YACvC,oCAAoC,EAAE,EAAE;YACxC,oCAAoC,EAAE;UACxC;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAAC,iBAAS,EAAC,MAAM;IACdJ,eAAM,CAACK,OAAO,CAAC,CAAC;EAClB,CAAC,CAAC;EAEF,IAAAC,YAAI,EAAC,iCAAiC,EAAE,YAAY;IAClD,MAAM,IAAAC,oDAAyB,EAACb,eAAe,EAAEL,eAAe,CAAC;IAEjE,IAAAmB,cAAM,EACJ,CACE,MAAMC,gBAAE,CAACC,QAAQ,CAACC,OAAO,CACvBhB,iBAAI,CAACiB,IAAI,CAAClB,eAAe,EAAE,KAAK,EAAE,WAAW,CAC/C,CAAC,EACDmB,MACJ,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACX,CAAC,CAAC;EAEF,IAAAR,YAAI,EAAC,uCAAuC,EAAE,YAAY;IACxD,MAAM,IAAAC,oDAAyB,EAACb,eAAe,EAAEL,eAAe,CAAC;IAEjE,IAAAmB,cAAM,EACJ,CACE,MAAMC,gBAAE,CAACC,QAAQ,CAACC,OAAO,CACvBhB,iBAAI,CAACiB,IAAI,CAAClB,eAAe,EAAE,SAAS,EAAE,WAAW,CACnD,CAAC,EACDmB,MACJ,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACX,CAAC,CAAC;EAEF,IAAAR,YAAI,EAAC,6DAA6D,EAAE,YAAY;IAC9E,IAAAN,eAAM,EAAC;MACL,CAACN,eAAe,GAAG;QACjB,cAAc,EAAEO,IAAI,CAACC,SAAS,CAACb,eAAe,CAAC;QAC/C,KAAK,EAAE;UACLc,SAAS,EAAE;YACTY,cAAc,EAAE;UAClB;QACF,CAAC;QACD,SAAS,EAAE;UACTZ,SAAS,EAAE;YACTY,cAAc,EAAE;UAClB;QACF;MACF;IACF,CAAC,CAAC;IAEF,MAAM,IAAAP,cAAM,EACV,IAAAD,oDAAyB,EAACb,eAAe,EAAEL,eAAe,CAC5D,CAAC,CAAC2B,QAAQ,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC;EAC1B,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}