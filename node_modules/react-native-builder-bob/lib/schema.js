"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.config = void 0;
var _arktype = require("arktype");
const _module = {
  name: '"module"',
  options: (0, _arktype.type)({
    esm: (0, _arktype.type)('boolean').default(false),
    babelrc: (0, _arktype.type)('boolean').default(false),
    configFile: (0, _arktype.type)('boolean | string').default(false),
    sourceMaps: (0, _arktype.type)('boolean').default(true),
    copyFlow: (0, _arktype.type)('boolean').default(false),
    jsxRuntime: (0, _arktype.type)('"automatic" | "classic"').default('automatic')
  })
};
const commonjs = {
  name: '"commonjs"',
  options: _module.options
};
const typescript = {
  name: '"typescript"',
  options: (0, _arktype.type)({
    project: 'string?',
    tsc: 'string?'
  })
};
const codegen = {
  name: '"codegen"'
};
const custom = {
  name: '"custom"',
  options: (0, _arktype.type)({
    script: 'string',
    clean: 'string?'
  })
};

// eslint-disable-next-line @typescript-eslint/no-unused-vars
const target = _arktype.type.or(commonjs.name, _module.name, typescript.name, codegen.name, custom.name);
const config = exports.config = (0, _arktype.type)({
  source: 'string',
  output: 'string',
  targets: _arktype.type.or(_arktype.type.or(_module.name, [_module.name], [_module.name, _module.options]), _arktype.type.or(commonjs.name, [commonjs.name], [commonjs.name, commonjs.options]), _arktype.type.or(typescript.name, [typescript.name], [typescript.name, typescript.options]), _arktype.type.or(codegen.name, [codegen.name]), [custom.name, custom.options]).array().moreThanLength(0),
  exclude: _arktype.type.string.default('**/{__tests__,__fixtures__,__mocks__}/**')
}).onDeepUndeclaredKey('reject');
//# sourceMappingURL=schema.js.map