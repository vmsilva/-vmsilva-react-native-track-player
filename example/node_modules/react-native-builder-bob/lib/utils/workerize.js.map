{"version":3,"file":"workerize.js","names":["_nodeWorker_threads","require","_codegen","_interopRequireDefault","_commonjs","_custom","_module2","_typescript","e","__esModule","default","targets","commonjs","module","typescript","codegen","custom","run","target","report","data","isMainThread","Error","Promise","resolve","reject","worker","Worker","__filename","workerData","env","process","FORCE_COLOR","stdout","isTTY","on","message","type","info","warn","error","success","code","String","exports","parentPort","postMessage"],"sources":["../../src/utils/workerize.ts"],"sourcesContent":["import {\n  Worker,\n  isMainThread,\n  parentPort,\n  workerData,\n} from 'node:worker_threads';\nimport codegen from '../targets/codegen';\nimport commonjs from '../targets/commonjs';\nimport custom from '../targets/custom';\nimport module from '../targets/module';\nimport typescript from '../targets/typescript';\nimport type { Report } from '../types';\nimport type { Target } from '../schema';\n\ntype WorkerData<T extends Target> = {\n  target: T;\n  data: Omit<Parameters<(typeof targets)[T]>[0], 'report'>;\n};\n\nconst targets = {\n  commonjs,\n  module,\n  typescript,\n  codegen,\n  custom,\n} as const;\n\nexport const run = async <T extends Target>(\n  target: T,\n  { report, ...data }: Parameters<(typeof targets)[T]>[0]\n) => {\n  if (!isMainThread) {\n    throw new Error('Worker can only be run from the main thread');\n  }\n\n  return new Promise<void>((resolve, reject) => {\n    const worker = new Worker(__filename, {\n      workerData: {\n        target,\n        data,\n      } satisfies WorkerData<T>,\n      env: {\n        ...process.env,\n        FORCE_COLOR: process.stdout.isTTY ? '1' : '0',\n      },\n    });\n\n    worker.on('message', (message) => {\n      switch (message.type) {\n        case 'info':\n          report.info(message.message);\n          break;\n        case 'warn':\n          report.warn(message.message);\n          break;\n        case 'error':\n          report.error(message.message);\n          break;\n        case 'success':\n          report.success(message.message);\n          break;\n      }\n    });\n\n    worker.on('error', (error) => {\n      reject(error);\n    });\n\n    worker.on('exit', (code) => {\n      if (code !== 0) {\n        reject(new Error(`Worker exited with code ${String(code)}`));\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\nif (!isMainThread) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion\n  const { target, data } = workerData as WorkerData<Target>;\n\n  const report: Report = {\n    info: (message) => parentPort?.postMessage({ type: 'info', message }),\n    warn: (message) => parentPort?.postMessage({ type: 'warn', message }),\n    error: (message) => parentPort?.postMessage({ type: 'error', message }),\n    success: (message) => parentPort?.postMessage({ type: 'success', message }),\n  };\n\n  if (target in targets) {\n    // @ts-expect-error - typescript doesn't support correlated union types https://github.com/microsoft/TypeScript/issues/30581\n    void targets[target]({ ...data, report });\n  } else {\n    throw new Error(`Unknown target: ${target}`);\n  }\n}\n"],"mappings":"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","ignoreList":[]}