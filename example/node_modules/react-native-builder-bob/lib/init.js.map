{"version":3,"file":"init.js","names":["_path","_interopRequireDefault","require","_fsExtra","_kleur","_dedent","_isGitDirty","_prompts","_loadConfig","_package","e","__esModule","default","FLOW_PRGAMA_REGEX","init","root","process","cwd","projectPackagePath","path","resolve","isGitDirty","shouldContinue","prompts","type","name","message","initial","exit","fs","pathExists","Error","pkg","JSON","parse","readFile","result","loadConfig","config","devDependencies","pack","source","validate","input","Boolean","entryFile","join","Object","fromEntries","entries","version","sort","a","b","localeCompare","questions","choices","title","value","selected","test","length","endsWith","push","keys","includes","output","targets","flow","target","undefined","esm","module","commonjs","types","import","tsconfig","writeJSON","compilerOptions","rootDir","allowUnreachableCode","allowUnusedLabels","esModuleInterop","forceConsistentCasingInFileNames","jsx","lib","moduleResolution","noFallthroughCasesInSwitch","noImplicitReturns","noImplicitUseStrict","noStrictGenericChecks","noUncheckedIndexedAccess","noUnusedLocals","noUnusedParameters","resolveJsonModule","skipLibCheck","strict","verbatimModuleSyntax","spaces","prepare","files","replace","exportsField","importField","requireField","exports","stringify","entryFields","main","key","entry","String","startsWith","remove","scripts","pkgFiles","some","file","update","filter","map","t","copyFlow","jest","modulePathIgnorePatterns","eslintIgnore","ignorefiles","ignorefile","content","split","writeFile","packageManager","stdout","write","dedent","kleur","yellow","magenta","bold","gray"],"sources":["../src/init.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport kleur from 'kleur';\nimport dedent from 'dedent';\nimport isGitDirty from 'is-git-dirty';\nimport prompts, { type PromptObject } from './utils/prompts';\nimport { loadConfig } from './utils/loadConfig';\nimport pack from '../package.json';\n\nconst FLOW_PRGAMA_REGEX = /\\*?\\s*@(flow)\\b/m;\n\nexport async function init() {\n  const root = process.cwd();\n  const projectPackagePath = path.resolve(root, 'package.json');\n\n  if (isGitDirty()) {\n    const { shouldContinue } = await prompts({\n      type: 'confirm',\n      name: 'shouldContinue',\n      message: `The working directory is not clean.\\n  You should commit or stash your changes before configuring bob.\\n  Continue anyway?`,\n      initial: false,\n    });\n\n    if (!shouldContinue) {\n      process.exit(0);\n    }\n  }\n\n  if (!(await fs.pathExists(projectPackagePath))) {\n    throw new Error(\n      `Couldn't find a 'package.json' file in '${root}'.\\n  Are you in a project folder?`\n    );\n  }\n\n  const pkg = JSON.parse(await fs.readFile(projectPackagePath, 'utf-8'));\n  const result = loadConfig(root);\n\n  if (\n    result?.config &&\n    pkg.devDependencies &&\n    pack.name in pkg.devDependencies\n  ) {\n    const { shouldContinue } = await prompts({\n      type: 'confirm',\n      name: 'shouldContinue',\n      message: `The project seems to be already configured with bob.\\n  Do you want to overwrite the existing configuration?`,\n      initial: false,\n    });\n\n    if (!shouldContinue) {\n      process.exit(0);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion\n  const { source } = (await prompts({\n    type: 'text',\n    name: 'source',\n    message: 'Where are your source files?',\n    initial: 'src',\n    validate: (input) => Boolean(input),\n  })) as { source: string };\n\n  let entryFile;\n\n  if (await fs.pathExists(path.join(root, source, 'index.js'))) {\n    entryFile = 'index.js';\n  } else if (await fs.pathExists(path.join(root, source, 'index.ts'))) {\n    entryFile = 'index.ts';\n  } else if (await fs.pathExists(path.join(root, source, 'index.tsx'))) {\n    entryFile = 'index.tsx';\n  }\n\n  if (!entryFile) {\n    throw new Error(\n      `Couldn't find a 'index.js'. 'index.ts' or 'index.tsx' file under '${source}'.\\n  Please re-run the CLI after creating it.`\n    );\n  }\n\n  pkg.devDependencies = Object.fromEntries(\n    [\n      ...Object.entries(pkg.devDependencies || {}),\n      [pack.name, `^${pack.version}`],\n    ].sort(([a], [b]) => a.localeCompare(b))\n  );\n\n  const questions: PromptObject[] = [\n    {\n      type: 'text',\n      name: 'output',\n      message: 'Where do you want to generate the output files?',\n      initial: 'lib',\n      validate: (input: string) => Boolean(input),\n    },\n    {\n      type: 'multiselect',\n      name: 'targets',\n      message: 'Which targets do you want to build?',\n      choices: [\n        {\n          title: 'module - for modern setups',\n          value: 'module',\n          selected: true,\n        },\n        {\n          title: 'commonjs - for legacy setups (Node.js < 20)',\n          value: 'commonjs',\n          selected: false,\n        },\n        {\n          title: 'typescript - declaration files for typechecking',\n          value: 'typescript',\n          selected: /\\.tsx?$/.test(entryFile),\n        },\n      ],\n      validate: (input: string) => Boolean(input.length),\n    },\n  ];\n\n  if (\n    entryFile.endsWith('.js') &&\n    FLOW_PRGAMA_REGEX.test(\n      await fs.readFile(path.join(root, source, entryFile), 'utf-8')\n    )\n  ) {\n    questions.push({\n      type: 'confirm',\n      name: 'flow',\n      message: 'Do you want to publish definitions for flow?',\n      initial: Object.keys(pkg.devDependencies || {}).includes('flow-bin'),\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion\n  const { output, targets, flow } = (await prompts(questions)) as {\n    output: string;\n    targets: string[];\n    flow?: boolean;\n  };\n\n  const target =\n    targets[0] === 'commonjs' || targets[0] === 'module'\n      ? targets[0]\n      : undefined;\n\n  const entries: {\n    [key in 'source' | 'commonjs' | 'module']?: string;\n  } = {\n    source: `./${path.join(source, entryFile)}`,\n  };\n\n  let esm = false;\n\n  if (targets.includes('module')) {\n    esm = true;\n    entries.module = `./${path.join(output, 'module', 'index.js')}`;\n  }\n\n  if (targets.includes('commonjs')) {\n    entries.commonjs = `./${path.join(output, 'commonjs', 'index.js')}`;\n  }\n\n  const types: {\n    [key in 'require' | 'import']?: string;\n  } = {};\n\n  if (targets.includes('typescript')) {\n    if (targets.includes('commonjs') && targets.includes('module')) {\n      types.require = `./${path.join(\n        output,\n        'typescript',\n        'commonjs',\n        source,\n        'index.d.ts'\n      )}`;\n\n      types.import = `./${path.join(\n        output,\n        'typescript',\n        'module',\n        source,\n        'index.d.ts'\n      )}`;\n    } else {\n      types.require = `./${path.join(\n        output,\n        'typescript',\n        source,\n        'index.d.ts'\n      )}`;\n\n      types.import = types.require;\n    }\n\n    if (!(await fs.pathExists(path.join(root, 'tsconfig.json')))) {\n      const { tsconfig } = await prompts({\n        type: 'confirm',\n        name: 'tsconfig',\n        message: `You have enabled 'typescript' compilation, but we couldn't find a 'tsconfig.json' in project root.\\n  Generate one?`,\n        initial: true,\n      });\n\n      if (tsconfig) {\n        await fs.writeJSON(\n          path.join(root, 'tsconfig.json'),\n          {\n            compilerOptions: {\n              rootDir: '.',\n              allowUnreachableCode: false,\n              allowUnusedLabels: false,\n              esModuleInterop: true,\n              forceConsistentCasingInFileNames: true,\n              jsx: 'react-jsx',\n              lib: ['ESNext'],\n              module: 'ESNext',\n              moduleResolution: 'bundler',\n              noFallthroughCasesInSwitch: true,\n              noImplicitReturns: true,\n              noImplicitUseStrict: false,\n              noStrictGenericChecks: false,\n              noUncheckedIndexedAccess: true,\n              noUnusedLocals: true,\n              noUnusedParameters: true,\n              resolveJsonModule: true,\n              skipLibCheck: true,\n              strict: true,\n              target: 'ESNext',\n              verbatimModuleSyntax: true,\n            },\n          },\n          { spaces: 2 }\n        );\n      }\n    }\n  }\n\n  const prepare = 'bob build';\n  const files = [\n    source,\n    output,\n    '!**/__tests__',\n    '!**/__fixtures__',\n    '!**/__mocks__',\n  ];\n\n  if (esm) {\n    let replace = false;\n\n    const exportsField = {\n      '.': {},\n      './package.json': './package.json',\n    };\n\n    const importField = {\n      ...(types.import ? { types: types.import } : null),\n      ...(entries.module ? { default: entries.module } : null),\n    };\n\n    const requireField = {\n      ...(types.require ? { types: types.require } : null),\n      ...(entries.commonjs ? { default: entries.commonjs } : null),\n    };\n\n    if (targets.includes('commonjs') && targets.includes('module')) {\n      exportsField['.'] = {\n        source: entries.source,\n        import: importField,\n        require: requireField,\n      };\n    } else if (targets.includes('commonjs')) {\n      exportsField['.'] = {\n        source: entries.source,\n        ...requireField,\n      };\n    } else if (targets.includes('module')) {\n      exportsField['.'] = {\n        source: entries.source,\n        ...importField,\n      };\n    }\n\n    if (\n      pkg.exports &&\n      JSON.stringify(pkg.exports) !== JSON.stringify(exportsField)\n    ) {\n      replace = (\n        await prompts({\n          type: 'confirm',\n          name: 'replace',\n          message: `Your package.json has 'exports' field set.\\n  Do you want to replace it?`,\n          initial: true,\n        })\n      ).replace;\n    } else {\n      replace = true;\n    }\n\n    if (replace) {\n      pkg.exports = exportsField;\n    }\n  }\n\n  const entryFields: {\n    [key in 'main' | 'module' | 'types']?: string;\n  } = {};\n\n  if (targets.includes('commonjs') && targets.includes('module')) {\n    entryFields.main = entries.commonjs;\n    entryFields.module = entries.module;\n\n    if (targets.includes('typescript')) {\n      entryFields.types = types.require;\n    }\n  } else if (targets.includes('commonjs')) {\n    entryFields.main = entries.commonjs;\n\n    if (targets.includes('typescript')) {\n      entryFields.types = types.require;\n    }\n  } else if (targets.includes('module')) {\n    entryFields.main = entries.module;\n\n    if (targets.includes('typescript')) {\n      entryFields.types = types.import;\n    }\n  }\n\n  for (const key in entryFields) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-type-assertion\n    const entry = entryFields[key as keyof typeof entryFields];\n\n    if (pkg[key] && pkg[key] !== entry) {\n      const { replace } = await prompts({\n        type: 'confirm',\n        name: 'replace',\n        message: `Your package.json has the '${key}' field set to '${String(pkg[key])}'.\\n  Do you want to replace it with '${String(entry)}'?`,\n        initial: true,\n      });\n\n      if (replace) {\n        pkg[key] = entry;\n      }\n    } else {\n      pkg[key] = entry;\n    }\n  }\n\n  if (\n    pkg['react-native'] &&\n    (pkg['react-native'].startsWith(source) ||\n      pkg['react-native'].startsWith(`./${source}`))\n  ) {\n    const { remove } = await prompts({\n      type: 'confirm',\n      name: 'remove',\n      message: `Your package.json has the 'react-native' field pointing to source code.\\n  This can cause problems when customizing babel configuration.\\n  Do you want to remove it?`,\n      initial: true,\n    });\n\n    if (remove) {\n      delete pkg['react-native'];\n    }\n  }\n\n  if (pkg.scripts?.prepare && pkg.scripts.prepare !== prepare) {\n    const { replace } = await prompts({\n      type: 'confirm',\n      name: 'replace',\n      message: `Your package.json has the 'scripts.prepare' field set to '${String(pkg.scripts.prepare)}'.\\n  Do you want to replace it with '${prepare}'?`,\n      initial: true,\n    });\n\n    if (replace) {\n      pkg.scripts.prepare = prepare;\n    }\n  } else {\n    pkg.scripts = pkg.scripts || {};\n    pkg.scripts.prepare = prepare;\n  }\n\n  if (pkg.files) {\n    const pkgFiles = pkg.files;\n\n    if (files?.some((file) => !pkgFiles.includes(file))) {\n      const { update } = await prompts({\n        type: 'confirm',\n        name: 'update',\n        message: `Your package.json already has a 'files' field.\\n  Do you want to update it?`,\n        initial: true,\n      });\n\n      if (update) {\n        pkg.files = [\n          ...files,\n          ...pkg.files.filter((file: string) => !files.includes(file)),\n        ];\n      }\n    }\n  } else {\n    pkg.files = files;\n  }\n\n  pkg[pack.name] = {\n    source,\n    output,\n    targets: targets.map((t: string) => {\n      if (t === target && flow) {\n        return [t, { copyFlow: true }];\n      }\n\n      if (t === 'commonjs' || t === 'module') {\n        return [t, { esm }];\n      }\n\n      return t;\n    }),\n  };\n\n  if (pkg.jest) {\n    const entry = `<rootDir>/${output}/`;\n\n    if (pkg.jest.modulePathIgnorePatterns) {\n      const { modulePathIgnorePatterns } = pkg.jest;\n\n      if (!modulePathIgnorePatterns.includes(entry)) {\n        modulePathIgnorePatterns.push(entry);\n      }\n    } else {\n      pkg.jest.modulePathIgnorePatterns = [entry];\n    }\n  }\n\n  pkg.eslintIgnore = pkg.eslintIgnore || ['node_modules/'];\n\n  if (!pkg.eslintIgnore.includes(`${output}/`)) {\n    pkg.eslintIgnore.push(`${output}/`);\n  }\n\n  await fs.writeJSON(projectPackagePath, pkg, {\n    spaces: 2,\n  });\n\n  const ignorefiles = [\n    path.join(root, '.gitignore'),\n    path.join(root, '.eslintignore'),\n  ];\n\n  for (const ignorefile of ignorefiles) {\n    if (await fs.pathExists(ignorefile)) {\n      const content = await fs.readFile(ignorefile, 'utf-8');\n\n      if (!content.split('\\n').includes(`${output}/`)) {\n        await fs.writeFile(\n          ignorefile,\n          `${content}\\n# generated by bob\\n${output}/\\n`\n        );\n      }\n    }\n  }\n\n  const packageManager = (await fs.pathExists(path.join(root, 'yarn.lock')))\n    ? 'yarn'\n    : 'npm';\n\n  process.stdout.write(\n    dedent(`\n    Project ${kleur.yellow(pkg.name)} configured successfully!\n\n    ${kleur.magenta(\n      `${kleur.bold('Perform last steps')} by running`\n    )}${kleur.gray(':')}\n\n      ${kleur.gray('$')} ${packageManager} install\n\n    ${kleur.yellow('Good luck!')}\n  `)\n  );\n}\n"],"mappings":"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","ignoreList":[]}